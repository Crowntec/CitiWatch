// <auto-generated />
using System;
using CitiWatch.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CitiWatch.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250828222920_FixSeedDataDynamicValues")]
    partial class FixSeedDataDynamicValues
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CitiWatch.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IsDeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IsDeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000001"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            Createdon = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            IsDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            LastModifiedOn = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Road"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000002"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            Createdon = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            IsDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            LastModifiedOn = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Waste"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000003"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            Createdon = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            IsDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            LastModifiedOn = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Electricity"
                        });
                });

            modelBuilder.Entity("CitiWatch.Domain.Entities.Complaint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IsDeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IsDeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("CitiWatch.Domain.Entities.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IsDeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IsDeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000001"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            Createdon = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            IsDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            LastModifiedOn = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "In Progress"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000002"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            Createdon = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            IsDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            LastModifiedOn = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Submitted"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000003"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            Createdon = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            IsDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            LastModifiedOn = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Resolved"
                        });
                });

            modelBuilder.Entity("CitiWatch.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("IsDeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IsDeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000001"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            Createdon = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "SuperAdmin",
                            FullName = "System Administrator",
                            IsDeleted = false,
                            IsDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            LastModifiedOn = new DateTime(2025, 8, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            PasswordHash = "$2a$11$.vCYWiCOAuf.t/.fOGHGeeeEcTxmXeeBqGxQRoiMlkyrLmjJz0epu",
                            Role = 1
                        });
                });

            modelBuilder.Entity("CitiWatch.Domain.Entities.Complaint", b =>
                {
                    b.HasOne("CitiWatch.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CitiWatch.Domain.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CitiWatch.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Status");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
